foreign func NSApplicationMain(_ argc: Int32, _ argv: **Int8)

type CGSize {
  var width: Double
  var height: Double
}
type CGPoint {
  var x: Double
  var y: Double
}
type CGRect {
  var origin: CGPoint
  var size: CGSize
}

extension ObjCBox {
  // HACK HACK HACK
  func send(_ message: *Int8, _ arg: CGRect) -> ObjCBox {
    return ObjCBox(obj: objc_msgSend(self.obj, sel_registerName(message), arg))
  }
  func send(_ message: *Int8, _ arg: Bool) -> ObjCBox {
    return ObjCBox(obj: objc_msgSend(self.obj, sel_registerName(message), arg))
  }
  func send(_ message: *Int8, _ arg1: ObjCBox, _ arg2: *Int8, _ arg3: ObjCBox) -> ObjCBox {
    return ObjCBox(obj: objc_msgSend(self.obj, sel_registerName(message), arg1, arg2, arg3))
  }
}

var NSWindow = Class("NSWindow")
var NSViewController = Class("NSViewController")
var NSView = Class("NSView")
var NSApplication = Class("NSApplication")
var NSApp = Class("NSApp")
var NSMenu = Class("NSMenu")
var NSMenuItem = Class("NSMenuItem")
var NSAutoreleasePool = Class("NSAutoreleasePool")
var NSProcessInfo = Class("NSProcessInfo")

func main(argc: Int, argv: **Int8) {
  var app = NSApplication.send("sharedApplication")
  var appMenuItem = NSMenuItem.new().retain()
  var frame = CGRect(origin: CGPoint(x: 0.0, y: 0.0),
                     size: CGSize(width: 1280.0, height: 1024.0))
  var name = NSProcessInfo.send("processInfo")
                          .send("processName")
  var menuBar = NSMenu.new().retain()
  app.send("setMainMenu:", menuBar)
  var appMenu = NSMenu.new()
                      .retain()
  var quitTitle = NSString.send("stringWithUTF8String:", "Quit ")
                          .send("stringByAppendingString:", name)
  var quitItem = NSMenuItem.alloc()
                           .send("initWithTitle:action:keyEquivalent:",
                                 quitTitle, "terminate:",
                                 NSString.send("stringWithUTF8String:", "q"))
                          .retain()
  appMenu.send("addItem:", quitItem)
  appMenuItem.send("setSubmenu:", appMenu)
  var vc = NSViewController.alloc()
                           .send("initWithNibName:bundle:", nil, nil)
                           .retain()
  vc.printRetainCount()
  var view = NSView.alloc().send("initWithFrame:", frame)
                           .retain()
  view.printRetainCount()
  vc.send("setView:", view)
  var window = NSWindow.send("windowWithContentViewController:", vc)
  window.printRetainCount()
  window.send("makeKeyAndOrderFront:", nil)
  window.send("setTitle:", name)
  app.send("activateIgnoringOtherApps:", true)
  app.send("run")
}
